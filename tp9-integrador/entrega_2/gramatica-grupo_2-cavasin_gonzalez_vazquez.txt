
<programa>::= BEGIN.PROGRAM <declaraciones> <lista_sentencias> END.PROGRAM | BEGIN.PROGRAM <lista_sentencias> END.PROGRAM


<declaraciones>::= DECLARE <lista_linea_declaraciones> ENDDECLARE
<lista_linea_declaraciones>::= <lista_linea_declaraciones><linea_declaracion> | <linea_declaracion>
<linea_declaracion>::= [ <id><linea_declaracion><tipo> ] | , <id><linea_declaracion><tipo> , | ] = [								


<lista_sentencias>::= <sentencia><lista_sentencias>  | <sentencia>
<sentencia>::= <asignacion> | <print> | <if> | <while>


<asignacion>::= <id> = <expresion>
<expresion>::= <expresion> + <termino> | <expresion> - <termino> | <termino>
<termino> ::= <termino> * <factor> | <termino> / <factor> | <factor>
<factor> ::= <id> | <cte_numerica> | ( <expresion> ) | <take>
<cte_numerica>::= <cte_int> | <cte_float>

<take>::=  take ( <op_num> ; <cte_int> ; [] ) | take ( <op_num> ; <cte_int> ; [ <lista_take> ] )
<op_num>::= + | - | / | *
<lista_take>::= <cte_int> ; <lista_take> | <cte_int> 


<print>::= print <string> | print <id>
<if>::= if <lista_condiciones> { <bloque> } | if <lista_condiciones> { <bloque> } else { <bloque> }
<while>::= while <lista_condiciones> { <bloque> }

<lista_condiciones>::= ( <condicion> && <lista_condiciones> ) | ( <condicion> || <lista_condiciones> ) | ( <condicion> )
<condicion>::= <id><op_logico><expresion> | <id><op_logico><id>
<bloque>::= <lista_sentencias>


<op_logico>::= == | <> | < | <= | > | >= 
<id>::= <letra> | <letra><lista_chars>
<tipo>::= int | float | string


<cte_int>::= <numero>
<cte_float>::= <numero> . | . <numero> | <numero>.<numero>
<cte_string>::= " <lista_chars> " | ""


<lista_chars>::= <char><cte_string> | <char>
<char>::= <letra> | <digito> | _
<numero>::= <digito><numero> | <digito>
<letra>::= a | b | c | ... | z | A | B | C | ... | Z
<digito>::= 0 | 1 | 2 | ... | 9




